# ============================================================================
# TOOLING BOOTSTRAP: Ensure essential tools (git, fzf, zoxide) are installed
# This script attempts to install missing tools in a cross-platform, robust way.
# It covers macOS, Debian/Ubuntu, RHEL/CentOS/Fedora, Arch, and basic Windows/MSYS2/Cygwin.
# ============================================================================

# Helper: Print error and exit
fail() {
    echo "ERROR: $1" >&2
    exit 1
}

# Helper: Check for command existence
has_cmd() {
    command -v "$1" >/dev/null 2>&1
}

# -------------------------------
# 1. Ensure git is installed
# -------------------------------
if ! has_cmd git; then
    echo "git not found. Attempting installation..."

    OS="$(uname -s)"
    # macOS
    if [ "$OS" = "Darwin" ]; then
        if has_cmd brew; then
            echo "Installing git using Homebrew..."
            brew install git || fail "Homebrew failed to install git."
        elif has_cmd port; then
            echo "Installing git using MacPorts..."
            sudo port install git || fail "MacPorts failed to install git."
        else
            echo "Neither Homebrew nor MacPorts found."
            echo "Please install Homebrew (https://brew.sh) or MacPorts (https://www.macports.org/) and rerun this script, or install git manually."
            exit 1
        fi

    # Debian/Ubuntu
    elif [ -f /etc/debian_version ]; then
        echo "Installing git using apt..."
        sudo apt-get update && sudo apt-get install -y git || fail "apt-get failed to install git."

    # RHEL/CentOS/Fedora
    elif [ -f /etc/redhat-release ] || [ -f /etc/centos-release ]; then
        if has_cmd dnf; then
            echo "Installing git using dnf..."
            sudo dnf install -y git || fail "dnf failed to install git."
        elif has_cmd yum; then
            echo "Installing git using yum..."
            sudo yum install -y git || fail "yum failed to install git."
        else
            fail "No suitable package manager found (dnf/yum)."
        fi

    # Arch Linux
    elif [ -f /etc/arch-release ]; then
        echo "Installing git using pacman..."
        sudo pacman -Sy --noconfirm git || fail "pacman failed to install git."

    # Windows (MSYS2/Cygwin/Git Bash)
    elif uname -o 2>/dev/null | grep -qiE 'msys|cygwin'; then
        echo "Please install git manually from https://git-scm.com/download/win or use your package manager."
        exit 1

    else
        echo "Unsupported OS. Please install git manually from https://git-scm.com/downloads."
        exit 1
    fi

    # Re-check after attempted install
    has_cmd git || fail "git installation failed or not found in PATH."
fi

# -------------------------------
# 2. Ensure fzf is installed (via git clone only)
# -------------------------------
if ! has_cmd fzf; then
    echo "fzf not found. Installing via git clone..."
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf || fail "Failed to clone fzf repository."
    ~/.fzf/install --all --no-bash --no-fish || fail "fzf install script failed."
    # Re-check after attempted install
    has_cmd fzf || fail "fzf installation failed or not found in PATH."
fi

# -------------------------------
# 3. Ensure zoxide is installed (via git clone only)
# -------------------------------
if ! has_cmd zoxide; then
    echo "zoxide not found. Installing via git clone..."
    git clone --depth 1 https://github.com/ajeetdsouza/zoxide.git ~/.zoxide || fail "Failed to clone zoxide repository."
    cd ~/.zoxide || fail "Failed to enter zoxide directory."
    if has_cmd cargo; then
        cargo install --locked --path . || fail "cargo failed to install zoxide from source."
    else
        echo "cargo (Rust) not found. Please install Rust (https://rustup.rs/) and rerun this script, or install zoxide manually."
        exit 1
    fi
    cd - >/dev/null 2>&1
    # Re-check after attempted install
    has_cmd zoxide || fail "zoxide installation failed or not found in PATH."
fi